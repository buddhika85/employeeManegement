@model IEnumerable<viewModels.employeeManagement.EmployeeViewModel>

@{
    ViewBag.Title = "Employees";
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@* search form *@
<div style="border:solid; border-color:burlywood; border-width:medium; padding:3%" class="form-horizontal">

    <form method="post">
        <fieldset>
            <legend>Search employees</legend>
            <div>
                <label for="employeeId">Employee Id:</label>
                <input type="number" name="employeeId" value="" />
            </div>
            <div>
                <label for="firstName">First Name:</label>
                <input type="text" name="firstName" value="" />
            </div>
            <div>
                <label for="lastName">Last Name:</label>
                <input type="text" name="lastName" value="" />
            </div>
            <div>
                <label for="salary">Salary:</label>
                <input type="number" name="salary" value="" />
            </div>
            <div>
                <label for="department">Department:</label>
                @Html.DropDownList("departmentId", new SelectList(ViewBag.DepartmentSelectListItems, "Value", "Text"))
            </div>
            <div>
                <label for="department">Permenent:</label>
                @Html.DropDownList("permanentChar", new SelectList(ViewBag.PermenentSelectListItems, "Value", "Text"))
            </div>
            <div>
                <label>&nbsp;</label>
                <input type="submit" value="Submit" class="submit" />
            </div>
        </fieldset>
    </form>

</div>
<br />
@* end search form *@

<h2>@ViewBag.SearchResultOrAll</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.EmployeeId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Firstname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Lastname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Salary)
        </th>
        @*<th>
            @Html.DisplayNameFor(model => model.DepartmentId)
        </th>*@
        @*<th>
            @Html.DisplayNameFor(model => model.PermanentChar)
        </th>*@
        <th>
            @Html.DisplayNameFor(model => model.Permanent)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DepartmentName)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.EmployeeId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Firstname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Lastname)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Salary)
        </td>
        @*<td>
            @Html.DisplayFor(modelItem => item.DepartmentId)
        </td>*@
        @*<td>
            @Html.DisplayFor(modelItem => item.PermanentChar)
        </td>*@
        <td>
            @Html.DisplayFor(modelItem => item.Permanent)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DepartmentName)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.EmployeeId }) |
            @Html.ActionLink("Details", "Details", new {  id=item.EmployeeId }) |
            @Html.ActionLink("Delete", "Delete", new {  id=item.EmployeeId })
        </td>
    </tr>
}

</table>
